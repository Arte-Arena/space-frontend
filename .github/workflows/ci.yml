name: Arte Arena Space Frontend - Production CI/CD Pipeline

on:
  push:
    branches:
      - "main"
      - "homolog"
  pull_request:
    branches:
      - main
    types: [closed]

jobs:
  CI:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        event_name: [push, pull_request]
    if: |
        (github.event_name == 'pull_request' && github.event.pull_request.merged == true) ||
        github.event_name == 'push'
    steps:
      - uses: actions/checkout@v4.1.1

      - name: Setup Environment and Tags
        id: setup_env
        run: |
          echo "Current directory: $(pwd)"
          ls -la
          image_name=artearenahub/space-frontend # Nome base da imagem

          if [[ "${{ github.event_name }}" == "push" ]]; then
            if [[ "${{ github.ref_name }}" == "homolog" ]]; then
              echo "NEXT_PUBLIC_API=https://api-homolog.spacearena.net" > .env
              echo "image_tag=$image_name-homolog:0.0.${{ github.run_number }}" >> $GITHUB_ENV # Tag específica para homolog
              echo "image_tag_latest=$image_name-homolog:latest" >> $GITHUB_ENV # Tag latest para homolog
              echo "Environment: Homolog (Push)"
            elif [[ "${{ github.ref_name }}" == "main" ]]; then
              echo "NEXT_PUBLIC_API=https://api.spacearena.net" > .env
              echo "image_tag=$image_name:0.0.${{ github.run_number }}" >> $GITHUB_ENV # Tag para produção
              echo "image_tag_latest=$image_name:latest" >> $GITHUB_ENV # Tag latest para produção
              echo "Environment: Production (Push)"
            fi
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "${{ github.base_ref }}" == "main" ]]; then
              echo "NEXT_PUBLIC_API=https://api.spacearena.net" > .env
              echo "image_tag=$image_name:0.0.${{ github.run_number }}" >> $GITHUB_ENV # Tag para produção (mesmo nome do push para main)
              echo "image_tag_latest=$image_name:latest" >> $GITHUB_ENV # Tag latest para produção
              echo "Environment: Production (Pull Request)"
            else
              echo "Pull Request não mergeado para a main. Saindo."
              exit 0
            fi
          fi
          echo "Image Tag: ${{ env.image_tag }}"
          echo "Image Tag Latest: ${{ env.image_tag_latest }}"
          echo "Environment file content:"
          cat .env

      - name: Ensure .env is included
        run: |
          ls -la
          if [ ! -f ".env" ]; then
            echo "Error: .env file was not created"
            exit 1
          fi

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          username: ${{secrets.DOCKERHUB_USER}}
          password: ${{secrets.DOCKERHUB_PWD}}

      - name: Build and push Docker frontend image
        uses: docker/build-push-action@v5.0.0
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ env.image_tag }}
            ${{ env.image_tag_latest }}
        env:
          ACTIONS_RUNNER_DEBUG: true
          ACTIONS_STEP_DEBUG: true

